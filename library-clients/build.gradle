plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    jcenter()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    bootVersion = '2.2.2.RELEASE'
    cloudVersion = '2.1.4.RELEASE'
    lombokVersion = '1.18.10'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'

    // cloud
    api 'org.springframework.cloud:spring-cloud-starter-openfeign:' + cloudVersion
    api 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:' + cloudVersion
    api 'org.springframework.cloud:spring-cloud-starter-config:' + cloudVersion

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security:' + bootVersion

    // lombok
    compileOnly 'org.projectlombok:lombok:' + lombokVersion
    annotationProcessor 'org.projectlombok:lombok:' + lombokVersion

    // own libraries
    implementation 'com.database.models:library-models:1.0'

    // JAX-B dependencies for JDK 9+
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

group = 'com.database.clients'
version = '1.0'

